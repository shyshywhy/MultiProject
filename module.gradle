
def initModuleCompile() {
    Properties properties = new Properties();
    File file = new File(rootDir.getAbsolutePath() + "/module.properties")
    properties.load(file.newDataInputStream())
    Iterator itr = properties.entrySet().iterator();
    while (itr.hasNext()) {
        Map.Entry e = (Map.Entry) itr.next();
        String key = e.getKey();
        rootProject.ext.setProperty(key, e.getValue());
    }
}

initModuleCompile()

ext {
    compileDependenciesModule = this.&compileDependenciesModule
    compile_project1 = this.&compile_project1
    compile_project2 = this.&compile_project2
    compile_project3 = this.&compile_project3

}

def compile_project1(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isProject1.toBoolean()) {
            releaseCompile project(path: ':project1', configuration: 'release')
            releaseCompile project(path: ':project1', configuration: 'debug')
        } else {
            println('compile project1 with aar')
            compile(name: 'project1-release', ext: 'aar')
        }
    }
}
def compile_project2(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isProject2.toBoolean()) {
            releaseCompile project(path: ':project2', configuration: 'release')
            debugCompile project(path: ':project2', configuration: 'debug')
        } else {
            println('compile project2 with aar')
            compile(name: 'project2-release', ext: 'aar')
        }
    }
}
def compile_project3(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isProject3.toBoolean()) {
            releaseCompile project(path: ':project3', configuration: 'release')
            releaseCompile project(path: ':project3', configuration: 'debug')
        } else {
            println('compile project3 with aar')
            compile(name: 'project3-release', ext: 'aar')
        }
    }
}

